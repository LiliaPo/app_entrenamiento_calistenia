import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import * as dotenv from 'dotenv';
import axios from 'axios';
dotenv.config();
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const app = express();
const port = process.env.PORT || 3000;
// Servir archivos estáticos desde la carpeta 'public'
app.use(express.static(path.join(__dirname, '../public')));
app.use(express.json());
const GROQ_API_URL = 'https://api.groq.com/openai/v1/chat/completions';
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, '../public/index.html'));
});
app.get('/asistente.html', (req, res) => {
    res.sendFile(path.join(__dirname, '../public/asistente.html'));
});
app.get('/dietas.html', (req, res) => {
    res.sendFile(path.join(__dirname, '../public/dietas.html'));
});
app.get('/nutricion.html', (req, res) => {
    res.sendFile(path.join(__dirname, '../public/nutricion.html'));
});
app.get('/tipo-entrenamiento.html', (req, res) => {
    res.sendFile(path.join(__dirname, '../public/tipo-entrenamiento.html'));
});
app.get('/generar-rutina.html', (req, res) => {
    res.sendFile(path.join(__dirname, '../public/generar-rutina.html'));
});
app.post('/generate-routine', async (req, res) => {
    try {
        const { tipo, lugar, mensaje } = req.body;
        console.log('Generando rutina para:', { tipo, lugar, mensaje });
        const response = await axios.post(GROQ_API_URL, {
            model: "mixtral-8x7b-32768",
            messages: [
                {
                    role: "system",
                    content: `Eres un entrenador personal experto especializado en crear rutinas de ejercicio personalizadas.
          
          Instrucciones específicas:
          - Crea una rutina de 6 días a la semana
          - Alterna los grupos musculares para permitir recuperación
          - Incluye ejercicios específicos con series, repeticiones y descansos
          - Adapta los ejercicios para realizarse en ${lugar}
          - Enfócate en el objetivo: ${tipo}
          
          Formato de respuesta requerido:
          Día 1: [Grupo Muscular Principal]
          - [Nombre del ejercicio] ([series] x [repeticiones])
          - Descanso entre series: [tiempo]
          
          Día 2: [Grupo Muscular Principal]
          [continuar con el mismo formato]
          
          Notas importantes:
          - Especifica el peso recomendado cuando sea relevante
          - Incluye ejercicios de calentamiento
          - Añade notas sobre la técnica correcta
          - Sugiere alternativas para diferentes niveles`
                },
                {
                    role: "user",
                    content: mensaje
                }
            ],
            temperature: 0.7,
            max_tokens: 2000
        }, {
            headers: {
                'Authorization': `Bearer ${process.env.GROQ_API_KEY}`,
                'Content-Type': 'application/json'
            }
        });
        console.log('Respuesta recibida de Groq');
        const rutina = response.data.choices[0].message.content;
        // Formatear la rutina para mejor legibilidad
        const rutinaFormateada = rutina
            .replace(/Día \d+/g, '\n$&\n')
            .replace(/^- /gm, '\n- ')
            .trim();
        res.json({ rutina: rutinaFormateada });
    }
    catch (error) {
        console.error('Error detallado al generar la rutina:', error);
        if (axios.isAxiosError(error)) {
            const axiosError = error;
            res.status(500).json({
                error: 'Error al generar la rutina',
                detalles: axiosError.response?.data || axiosError.message
            });
        }
        else {
            res.status(500).json({
                error: 'Error al generar la rutina',
                detalles: 'Error interno del servidor'
            });
        }
    }
});
app.post('/generate-diet', async (req, res) => {
    try {
        const { tipoDieta, duracion } = req.body;
        const response = await axios.post(GROQ_API_URL, {
            model: "mixtral-8x7b-32768",
            messages: [
                {
                    role: "system",
                    content: "Eres un nutricionista experto. Proporciona planes de dieta personalizados basados en los objetivos del usuario."
                },
                {
                    role: "user",
                    content: `Genera un plan de dieta para ${tipoDieta} con duración de ${duracion}.`
                }
            ]
        }, {
            headers: {
                'Authorization': `Bearer ${process.env.GROQ_API_KEY}`,
                'Content-Type': 'application/json'
            }
        });
        const dieta = response.data.choices[0].message.content;
        res.json({ dieta });
    }
    catch (error) {
        console.error('Error al generar la dieta:', error);
        if (axios.isAxiosError(error)) {
            const axiosError = error;
            res.status(500).json({
                error: 'Error al generar la dieta',
                detalles: axiosError.response?.data || axiosError.message
            });
        }
        else {
            res.status(500).json({
                error: 'Error al generar la dieta',
                detalles: 'Error interno del servidor'
            });
        }
    }
});
app.post('/generate-nutrition', async (req, res) => {
    try {
        const { tipoNutricion, objetivoNutricion } = req.body;
        const response = await axios.post(GROQ_API_URL, {
            model: "mixtral-8x7b-32768",
            messages: [
                {
                    role: "system",
                    content: "Eres un experto en nutrición deportiva. Proporciona planes de nutrición personalizados basados en los objetivos del usuario."
                },
                {
                    role: "user",
                    content: `Genera un plan de nutrición deportiva para ${tipoNutricion} enfocado en ${objetivoNutricion}.`
                }
            ]
        }, {
            headers: {
                'Authorization': `Bearer ${process.env.GROQ_API_KEY}`,
                'Content-Type': 'application/json'
            }
        });
        const nutricion = response.data.choices[0].message.content;
        res.json({ nutricion });
    }
    catch (error) {
        console.error('Error al generar el plan de nutrición:', error);
        if (axios.isAxiosError(error)) {
            const axiosError = error;
            res.status(500).json({
                error: 'Error al generar el plan de nutrición',
                detalles: axiosError.response?.data || axiosError.message
            });
        }
        else {
            res.status(500).json({
                error: 'Error al generar el plan de nutrición',
                detalles: 'Error interno del servidor'
            });
        }
    }
});
app.listen(port, () => {
    console.log(`Servidor corriendo en http://localhost:${port}`);
});
